// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hoho.Data;

#nullable disable

namespace hoho.Migrations
{
    [DbContext(typeof(QLHHDatacontext))]
    partial class QLHHDatacontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hoho.Data.OITM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OUGPId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode")
                        .IsUnique();

                    b.HasIndex("OUGPId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("hoho.Data.OITW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityOnHand")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WarehouseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId", "WarehouseCode")
                        .IsUnique();

                    b.ToTable("ItemWarehouses");
                });

            modelBuilder.Entity("hoho.Data.OUGP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseUomId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseUomId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("UnitOfMeasureGroups");
                });

            modelBuilder.Entity("hoho.Data.OUOM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("UnitsOfMeasure");
                });

            modelBuilder.Entity("hoho.Data.UGP1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AltQty")
                        .HasColumnType("float");

                    b.Property<int>("AlternateUoMId")
                        .HasColumnType("int");

                    b.Property<double>("BaseQty")
                        .HasColumnType("float");

                    b.Property<int>("FatherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlternateUoMId");

                    b.HasIndex("FatherId", "AlternateUoMId")
                        .IsUnique();

                    b.ToTable("UnitConversions");
                });

            modelBuilder.Entity("hoho.Data.OITM", b =>
                {
                    b.HasOne("hoho.Data.OUGP", "UnitOfMeasureGroup")
                        .WithMany("Items")
                        .HasForeignKey("OUGPId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("UnitOfMeasureGroup");
                });

            modelBuilder.Entity("hoho.Data.OITW", b =>
                {
                    b.HasOne("hoho.Data.OITM", "Item")
                        .WithMany("WarehouseStocks")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("hoho.Data.OUGP", b =>
                {
                    b.HasOne("hoho.Data.OUOM", "BaseUnitOfMeasure")
                        .WithMany("BaseUnitGroups")
                        .HasForeignKey("BaseUomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseUnitOfMeasure");
                });

            modelBuilder.Entity("hoho.Data.UGP1", b =>
                {
                    b.HasOne("hoho.Data.OUOM", "AlternateUnitOfMeasure")
                        .WithMany("AlternateUnits")
                        .HasForeignKey("AlternateUoMId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("hoho.Data.OUGP", "UnitGroup")
                        .WithMany("UnitConversions")
                        .HasForeignKey("FatherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlternateUnitOfMeasure");

                    b.Navigation("UnitGroup");
                });

            modelBuilder.Entity("hoho.Data.OITM", b =>
                {
                    b.Navigation("WarehouseStocks");
                });

            modelBuilder.Entity("hoho.Data.OUGP", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("UnitConversions");
                });

            modelBuilder.Entity("hoho.Data.OUOM", b =>
                {
                    b.Navigation("AlternateUnits");

                    b.Navigation("BaseUnitGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
